# * **************************************************************** **
#
# File: brics/control.ini
# Desc: Control file for the brics
# Note:
#
# Copyright 2006, Microbric Pty Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (in the docs/licenses directory)
# for more details.
#
# Svn: $Id: control.ini 51 2006-12-02 01:14:52Z briand $
# * **************************************************************** */

# DO NOT MODIFY (if you don't know what you are doing)
# THIS FILE IS NEEDED FOR PROPER FUNCTIONING OF THE PROGRAM

# Acceptable sections are:
#
# arrow (big_shaft, big_head, small_shaft, small_head, normal_colour, select_colour)
# group%d (name, colour, bmap, shrunk_bmap)
# device%d (name, group, bmap, sel_bmap, [help, helpfile])
# start (main_bmp, event_bmp)

[control]
highbric: 37

[arrow]
selleft: arrow_backward_highlight.png
selright: arrow_forward_highlight.png
left: arrow_backward.png
right: arrow_forward.png

[new]
bmap: new_event.png
selbmap: start_event_selected.png

[end]
bmap: If_loop_end.png
selbmap: If_loop_end.png

[ifs]
# unused ones
bumper: If_blank
analogin: If_blank
digin: If_blank
pulse: If_blank
serial: If_blank

irrx: If_Infrared_Data_Received
tracker: If_line_detected
button: If_button
light: If_light_level
remote: If_remote
timer: If_timer
var: If_variable
clap: If_clap
obstacle: If_obstacle

[group1]
name: Control
expbmap: menu_control_highlight.png
colbmap: menu_control_highlight.png

[group2]
name: Read
expbmap: menu_read_highlight.png
colbmap: menu_read_highlight.png

[group3]
name: Data
expbmap: menu_data_highlight.png
colbmap: menu_data_highlight.png

[group4]
name: Flow
expbmap: menu_flow_highlight.png
colbmap: menu_flow_highlight.png

#[group5]
#name: Start
#expbmap: menu_start_highlight.png
#colbmap: menu_start.png

#[group5]
#name: Special
#expbmap: menu_advanced_highlight.png
#colbmap: menu_advanced.png

[bric5]
name: Motor
group: Control
bmap: motor.png
selbmap: motor_selected.png
disbmap: motor_faded.png
enable: D(Motor A;Motor B)

help:	Control a single motor module using the following options:
	BLANKLINE
	Direction:
	Direction refers to the direction the robot will move.
	Stop - Immediately stop by braking
	Forward - Drive the wheel to make the robot move forward
	Backward - Drive the wheel to make the robot move backward
	Coast - Remove power to the wheel without braking
	BLANKLINE
	Speed:
	Speed is selected using the drop down box from 0 to 10 (10 is fastest) or by selecting a variable. (See variable in the user manual)
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by double clicking on the module's label in the module configuration box above.
	BLANKLINE
	Also see 'Motor Pair' - Control a pair of motors.

[bric2]
name: Beep
group: Control
bmap: beep.png
selbmap: beep_selected.png
disbmap: beep_faded.png
enable: D(Sounder)

help:	Sounds a single beep 
	Frequency: 3.5KHz
	Duration: 50mS (0.05 Seconds)
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by double clicking on the module's label in the module configuration box above.


[bric3]
name: Tone
group: Control
bmap: tone.png
selbmap: tone_selected.png
disbmap: tone_faded.png
enable: D(Sounder)

# which beeper
# tone, freq, duration (constants or 8bit var)
# tune string (constant or 8bit var)

help: 	Plays musical notes through the sounder module. This can be done as a single note selected from the drop down box or by typing in a string of notes using the table below as a reference.
	BLANKLINE
	A tune string looks like this: "ndndndndndnd..." (max 16 pairs) where n is a note from the following table, and d is the note time from 0 to 7 (each number is another 20th of a second).
	Note table:
	m - A, sixth octave
	M - A#
	n - B
	c - C, seventh octave
	C - C#
	d - D
	D - D#
	e - E
	f - F
	F - F#
	g - G
	G - G#
	a - A
	A - A#
	b - B
	o - C, eighth octave
	R - Rest
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.


[bric9]
name: Set Timer
group: Control
bmap: timer.png
selbmap: timer_selected.png
disbmap: timer_faded.png
enable:

help:	The timer is a function that occurs in the background. You can use the timer to find out how long something is taking or when you want something to stop after an amount of time.
	BLANKLINE
	The timer is NOT a clock so it doesn't tell the time! (Think of it as a stop watch)
	BLANKLINE
	A big point to note with the Timer is that it counts down (NOT UP).
	BLANKLINE
	Another point to note is if you wish to place the timer value into a variable it requires a variable word (+/-32767). (See variable in the user manual)
	BLANKLINE
	The Timer control icon (red) allows the Timer to be set or cleared and the Timer read icon (blue) allows the timers count to be moved into a variable.




[bric7]
name: LineTracker
group: Control
bmap: Linetracker.png
selbmap: Linetracker_selected.png
disbmap: Linetracker_faded.png

enable: D(Line Tracker)
# if line_tracker
# led level (constant or 8bit var)

help:	Activate the Line Tracker and control the LED on the line Tracker module by turning it on or off. If a variable is used to control the LED then a variable that equals zero will turn the LED off and a variable equal to 1 will turn the LED on. (For more information on variables see the user manual)
	BLANKLINE
	Note that this function only works when the Line Tracker is at position 0 on the motherboard.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.

[bric4]
name: Obstacle Detection
group: Control
bmap: detect_obsacle.png
selbmap: detect_obsacle_selected.png
disbmap: detect_obsacle_faded.png

enable: D(IR Transmitter)
# if line_tracker
# led level (constant or 8bit var)

help:	Activate IR obstacle detection. Starting detection also clears the detection indication.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.

[bric8]
name: Infrared Data Out
group: Control
bmap: infrared_data_out.png
selbmap: infrared_data_out_selected.png
disbmap: infrared_data_out_faded.png
enable: D(IR Transmitter)
# which transmitter
# const or 8bit var
 
help:	Send data via the infrared transmitter module. Either a character or a variable can be sent. Note only 8 bit variables (range of 0-255) can be sent. (For more information on variables see the user manual)
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module''s label in the module configuration box above.

[bric12]
name: Button
group: Read
bmap: button.png
selbmap: button_selected.png
disbmap: button_faded.png
enable: U

help: Reads the state of the buttons into the selected variable
		1 = Down button pressed
		2 = Centre button pressed
		3 = Up button pressed

[bric13]
name: Read Clap Detect
group: Read
bmap: clap.png
selbmap: Clap_selected.png
disbmap: Clap_faded.png
enable: U

help: Reads the state of clap detection into a variable AND CLEARS IT!
      0 = no clap detected
	  1 = clap detected

[bric18]
name: Read Distance
group: Read
bmap: read_distance.png
selbmap: read_distance_selected.png
disbmap: read_distance_faded.png
enable: S

help: Reads the current distance to go for a motor

[bric11]
name: Read Obstacle Detect
group: Read
bmap: detect_obsacle2.png
selbmap: detect_obsacle2_selected.png
disbmap: detect_obsacle2_faded.png
enable: U

help: Reads the state of obstacle detection into a variable AND CLEARS IT!
      Note: these variables can be orred together.
      0 = no obstacles detected
	  1 = obstacle detected on right
      2 = obstacle detected ahead
      4 = obstacle detected on left
      8 = obstacle detected

[bric16]
name: Light Level
group: Read
bmap: light-_level.png
selbmap: light-_level_selected.png
disbmap: light-_level_faded.png
enable: D(Line Tracker;LED)S

# Only if line tracker so only 1 possibility
# 16bit var to put the level

help: 	Reads the current light level reading from the light sensor on the Line Tracker module into a variable. Note this requires a variable with a +/-32767 range.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the modules label in the module configuration box above.


[bric19]
name: Read Timer
group: Read
bmap: timer02.png
selbmap: timer02_selected.png
disbmap: timer02_faded.png
enable: S

# 16bit var to put current time in

help: 	Reads the current Timer count into a selected variable
	BLANKLINE
	Note there must be a 16 bit variable created before this icon can be used.



[bric14]
name: Line Tracker
group: Read
bmap: Linetracker02.png
selbmap: Linetracker02_selected.png
disbmap: Linetracker02_faded.png
enable: D(Line Tracker)U

# 8bit var to put the status (0, 1) into

help: 	Reads the current Line Tracker status into a register.
		On Black = 0 (No reflected light)
		On White = 1 (Reflected light)
	BLANKLINE
	Note the Line Tracker module can only be used at position 0
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.




[bric17]
name: Infrared Data In
group: Read
bmap: infrared_in.png
selbmap: infrared_in_selected.png
disbmap: infrared_in_faded.png
enable: D(IR Receiver)U

# which receiver
# 8bit char to put character in

help:	Reads the last received infrared data into the selected 8 bit variable.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.




[bric15]
name: Remote
group: Read
bmap: remote.png
selbmap:remote_selected.png
disbmap:remote_faded.png
enable: D(IR Receiver)U

# which receiver
# 8bit char to put match in

help: 	Reads the last received remote control command into the selected 8 bit variable.
	BLANKLINE
	Note that when a program is downloaded via the USB cable the stored infrared codes are deleted.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.






[bric25]
name: Set Memory
group: Data
bmap: set_memory.png
selbmap: set_memory_selected.png
disbmap: set_memory_faded.png
enable: V

help: 	Put a value (data) into a variable.
	BLANKLINE
	A memory location is called a "variable". In Microbric BricWorks there are two types of variables: 
		1. An 8 bit variable otherwise known as a "byte" and has a range of 0 to 255.
		2. A 16 bit variable otherwise known as a "word" and has a range from -32,767 to +32,767.
	BLANKLINE
	This type of memory is sometimes referred to as "scratch pad" memory, as it is generally written and rewritten over many times when your program is running. It is also "volatile" meaning that when the batteries are removed the data contained in the variable is lost.





[bric23]
name: Increment
group: Data
bmap: increment1.png
selbmap: increment1_selected.png
disbmap: increment1_faded.png
enable: V

help:	Increments (adds one) to the selected variable

[bric26]
name: Copy
group: Data
bmap: copy.png
selbmap: copy_selected.png
disbmap: copy_faded.png
enable: V

# two variable names

help: Copy data from one variable to another variable.

[bric27]
name: Maths Basic
group: Data
bmap: maths.png
selbmap: maths_selected.png
disbmap: maths_faded.png
enable: U

# expression with variable names

help: 	Perform maths to variables with a range of 0-255. (8 bit) The result (answer) goes back into the selected variable at the top.


[bric31]
name:  If
group: Flow
bmap:  if_else.png
selbmap: if_else_selected.png
disbmap: if_else_faded.png

# specials - if char rx, etc
# expression

help:	Splits the program flow by making a decision:
	BLANKLINE
	IF true (tick) then do this...  
	OR
	IF not true (cross) then do this...
	BLANKLINE
	There are two different ways to use the IF icon:
	BLANKLINE
	1. Compare a variable to a fixed value. The options are:
	= Equal to
	!= Not equal to
	< Less than
	> Greater than
	<= Less than or equal to
	>= Greater than or equal to
	BLANKLINE
	IF the result is true the program takes the true path (tick)
	IF the result is NOT true then the program takes the false path (cross)
	BLANKLINE
	2. Check IF an event has occurred. The possible event sources and events are: 
	BLANKLINE
	Motherboard - Has five potential events:
		1. Button 1 is pressed - Down Arrow
		2. Button 2 is pressed - Middle Button
		3. Button 3 is pressed - Up Arrow
		4. Timer finished - Timer has counted down to zero and stopped
		5. A serial character is received through the programming port - ADVANCED OPTION ONLY
	BLANKLINE
	Bump Module - Has three potential events:
		1. Pressed - Pushed in
		2. Released - Not pushed in
		3. Any Change - Change from pressed to released or from released to pressed
	BLANKLINE
	Infrared Receiver - Has ten potential events:
		1. Infrared Character - Received an IR character
		2. Any RC Match - Any pre-programmed remote code received
		3. RC Match 1 - Pre-programmed remote code 1 received
		4. RC Match 2 - Pre-programmed remote code 2 received
		5. RC Match 3 - Pre-programmed remote code 3 received
		6. RC Match 4 - Pre-programmed remote code 4 received
		7. RC Match 5 - Pre-programmed remote code 5 received
		8. RC Match 6 - Pre-programmed remote code 6 received
		9. RC Match 7 - Pre-programmed remote code 7 received
		10. RC Match 8 - Pre-programmed remote code 8 received
	BLANKLINE
	Line Tracker - Has three potential events:
		1. On reflective surface - Surfaces that reflect red light are: white, red and yellow
		2. On non-reflective surface - Surfaces that do not reflect red light are: black, blue and green 
		3. Any change - A change from reflective to non-reflective or from non-reflective to reflective
	BLANKLINE
	Sounder - Has only one possible event, which is Tune finished



[bric30]
name:  Loop
group: Flow
bmap:  If_loop.png
selbmap: If_loop_selected.png
disbmap: If_loop.png

help:	Repeat the program icons that are placed inside the loop.
	BLANKLINE
	There are three loop options:
	1. Loop forever. Note that the microcontroller will fall asleep after 2 minutes, however this can be prevented by using the "Advanced" icon at the beginning of your program and selecting Sleep: never. 
	BLANKLINE
	2. Test passes - Loop until the value in a selected variable is:
	= Equal to
	!= Not equal to
	< Less than
	> Greater than
	<= Less than or equal to
	>= Greater than or equal to
	... the chosen value
	BLANKLINE
	3. Event happens - Loop until a selected event occurs. 
	BLANKLINE
	There are multiple event sources and each source has one or more events to choose from:

	Motherboard - Has five potential events:
		1. Button 1 is pressed - Down Arrow
		2. Button 2 is pressed - Middle Button
		3. Button 3 is pressed - Up Arrow
		4. Timer finished - Timer has counted down to zero and stopped
		5. A serial character is received through the programming port - ADVANCED OPTION ONLY
	BLANKLINE
	Bump Module - Has three potential events:
		1. Pressed - Pushed in
		2. Released - Not pushed in
		3. Any Change - Change from pressed to released or from released to pressed
	BLANKLINE
	Infrared Receiver - Has ten potential events:
		1. Infrared Character - Received an IR character
		2. Any RC Match - Any pre-programmed remote code received
		3. RC Match 1 - Pre-programmed remote code 1 received
		4. RC Match 2 - Pre-programmed remote code 2 received
		5. RC Match 3 - Pre-programmed remote code 3 received
		6. RC Match 4 - Pre-programmed remote code 4 received
		7. RC Match 5 - Pre-programmed remote code 5 received
		8. RC Match 6 - Pre-programmed remote code 6 received
		9. RC Match 7 - Pre-programmed remote code 7 received
		10.RC Match 8 - Pre-programmed remote code 8 received
	BLANKLINE
	Line Tracker - Has three potential events:
		1. On reflective surface - Surfaces that reflect red light are: white, red and yellow
		2. On non-reflective surface - Surfaces that do not reflect red light are: black, blue and green 
		3. Any change - A change from reflective to non-reflective or from non-reflective to reflective
	BLANKLINE
	Sounder has only one possible event, which is Tune finished.


 
[bric29]
name:  Wait
group: Flow
bmap:  wait.png
selbmap: wait_selected.png
disbmap: wait_faded.png

# events
# time - var or const

help:	Stops the program from continuing and waits for either:
	BLANKLINE
	1. An amount of time to pass - Maximum of 327.67 seconds with a resolution of 0.01 seconds (10mS) 
	BLANKLINE
	2. Wait until an event happens. The possible event sources and events are:
	BLANKLINE
	Motherboard - Has five potential events:
		1. Button 1 is pressed - Down Arrow
		2. Button 2 is pressed - Middle Button
		3. Button 3 is pressed - Up Arrow
		4. Timer finished - Timer has counted down to zero and stopped
		5. A serial character is received through the programming port - ADVANCED OPTION ONLY
	BLANKLINE
	Bump Module - Has three potential events:
		1. Pressed - Pushed in
		2. Released - Not pushed in
		3. Any Change - Change from pressed to released or from released to pressed
	BLANKLINE
	Infrared Receiver - Has ten potential events:
		1. Infrared Character - Received an IR character
		2. Any RC Match - Any pre-programmed remote code received
		3. RC Match 1 - Pre-programmed remote code 1 received
		4. RC Match 2 - Pre-programmed remote code 2 received
		5. RC Match 3 - Pre-programmed remote code 3 received
		6. RC Match 4 - Pre-programmed remote code 4 received
		7. RC Match 5 - Pre-programmed remote code 5 received
		8. RC Match 6 - Pre-programmed remote code 6 received
		9. RC Match 7 - Pre-programmed remote code 7 received
		10. RC Match 8 - Pre-programmed remote code 8 received
	BLANKLINE
	Line Tracker - Has three potential events:
		1. On reflective surface - Surfaces that reflect red light are: white, red and yellow
		2. On non-reflective surface - Surfaces that do not reflect red light are: black, blue and green 
		3. Any change - A change from reflective to non-reflective or from non-reflective to reflective
	BLANKLINE
	Sounder - Has only one possible event, which is Tune finished

 
[bric28]
name: Maths Advanced
group: Hide
bmap: maths_advanced.png
selbmap: maths_advanced_selected.png
disbmap: maths_advanced_faded.png
enable: S

# expression with variable names

help: 	Perform maths to variables with a range of +/-32,767. (16 bit) The result (answer) goes back into the selected variable at the top.


[bric33]
name:  EndIf
group: Hide
bmap:  If_blank.png
selbmap: If_blank_selected.png
disbmap: If_blank_faded.png

# specials - if char rx, etc
# expression

help:  Make a decision based on variables.

[bric37]
name:  EndLoop
group: Hide
bmap:  If_loop_end.png
selbmap: If_loop_end.png
disbmap: If_loop_end_faded.png

# specials - if char rx, etc
# expression

help:  Make a decision based on variables.

[bric34]
name: Main
group: Hide
bmap: start.png
selbmap: start.png
disbmap: start.png
enable: A
help:

[bric35]
name: Event
group: Flow
#group: Hide
bmap: start_event.png
selbmap: start_event_selected.png
disbmap: start_event_faded.png
enable:
# event type

help:

[bric36]
name: Last
group: Hide
bmap: End.png
selbmap: End.png
disbmap: End.png
enable: A
help:



[bric6]
name: Motor Pair
group: Control
bmap: motor_pair.png
selbmap: motor_pair_selected.png
disbmap: motor_pair_faded.png
enable: P

help: 	Control a pair of motor modules using the following options:
	BLANKLINE
	Direction:
	Direction refers to the direction the robot will move.
	Stop - Immediately stop by braking
	Forward - Drive the wheels to make the robot move forwards
	Backward - Drive the wheels to make the robot move backwards
	Coast - Remove power to the wheels without braking
	Right - Drive the wheels to make the robot turn right
	Left - Drive the wheels to make the robot turn left
	Spin right - Drive the wheels to make the robot spin right
	Spin left - Drive the wheels to make the robot spin left
	Back right - Drive the wheels to make the robot turn right backwards
	Back left - Drive the wheels to make the robot turn left backwards
	BLANKLINE
	Speed:
	Speed is selected using the drop down box from 1 to 10 (10 is fastest) or by selecting a variable. (See variable in the user manual)
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by double clicking on the module's label in the module configuration box above.
	BLANKLINE
	Also see 'Motor' - Control a single motor.


[bric1]
name: LED
proptitle: Flash LED Properties
group: Control
bmap: LED.png
selbmap:LED_selected.png
disbmap:LED_faded.png
enable: D(LED)

help: 	Turn an LED on or off using either a selection from the drop down box or by using a variable 0 = off, 1 = on.
	BLANKLINE
	Module Label:
	The module drop down box is used to select the module label that this icon refers to. If there is more than one module of this type connected to your motherboard you can select which one you wish to control.
	BLANKLINE
	The module labels can be renamed by clicking on the module's label in the module configuration box above.


[bric24]
name: Decrement
group: Data
bmap: decrement1.png
selbmap: decrement1_selected.png
disbmap: decrement1_faded.png
enable: V

help: 	Decrements (minuses one) from the selected variable.




